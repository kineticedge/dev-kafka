networks:
  default:
    external: true
    name: kafka-local

volumes:
  ct0: {}
  bk1: {}
  bk2: {}
  bk3: {}
  bk4: {}
  c_kafka_data: {}
  c_kafka_secrets: {}

#  //docker pull linuxserver/wireshark:4.0.14

services:

#  wireshark:
#    image: linuxserver/wireshark:4.0.14
#    ports:
#      - 5900:5900
#    environment:
#      - PUID=1000
#      - PGID=1000
#      - TZ=Europe/London
#    volumes:
##      - ./config:/config
#      - /var/run/docker.sock:/var/run/docker.sock

  controller-0:
    image: confluentinc/cp-kafka:${VERSION}
    hostname: controller-0
    container_name: dk-controller-0
    stop_grace_period: 60s
    healthcheck:
      test: nc -z localhost 9093 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    volumes:
      - ct0:/var/lib/kafka/data
      - ./jmx:/opt/jmx_prometheus
      - ./secrets:/etc/kafka/secrets
    environment:
      CLUSTER_ID: "0000000000000000000000"
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_PROCESS_ROLES: controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 10@controller-0:9093
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_NODE_ID: 10
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_OPTS: -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml -javaagent:/opt/jmx_prometheus/jolokia-jvm.jar=port=7072,host=*

  broker-1:
    image: confluentinc/cp-kafka:${VERSION}
    hostname: broker-1
    container_name: dk-broker-1
    stop_grace_period: 60s
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      controller-0:
        condition: service_healthy
    ports:
      - "19092:19092"
      - "9092:19092"
      - "17071:7071"
    volumes:
      - bk1:/var/lib/kafka/data
      - ./jmx:/opt/jmx_prometheus
      - ./secrets:/etc/kafka/secrets
    environment:
      CLUSTER_ID: "0000000000000000000000"
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker
      KAFKA_SECURITY_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:9092,PLAINTEXT_HOST://localhost:19092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 10@controller-0:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_METRIC_REPORTERS:
      KAFKA_OPTS: -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml -javaagent:/opt/jmx_prometheus/jolokia-jvm.jar=port=7072,host=*
      CONFLUENT_METRICS_ENABLE: "false"

  broker-2:
    image: confluentinc/cp-kafka:${VERSION}
    hostname: broker-2
    container_name: dk-broker-2
    stop_grace_period: 60s
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      controller-0:
        condition: service_healthy
    ports:
      - "29092:29092"
      - "27071:7071"
    volumes:
      - bk2:/var/lib/kafka/data
      - ./jmx:/opt/jmx_prometheus
      - ./secrets:/etc/kafka/secrets
    environment:
      CLUSTER_ID: "0000000000000000000000"
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker
      KAFKA_SECURITY_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-2:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 10@controller-0:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_METRIC_REPORTERS:
      KAFKA_OPTS: -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml -javaagent:/opt/jmx_prometheus/jolokia-jvm.jar=port=7072,host=*
      CONFLUENT_METRICS_ENABLE: "false"

  broker-3:
    image: confluentinc/cp-kafka:${VERSION}
    hostname: broker-3
    container_name: dk-broker-3
    stop_grace_period: 60s
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      controller-0:
        condition: service_healthy
    ports:
      - "39092:39092"
      - "37071:7071"
    volumes:
      - bk3:/var/lib/kafka/data
      - ./jmx:/opt/jmx_prometheus
      - ./secrets:/etc/kafka/secrets
    environment:
      CLUSTER_ID: "0000000000000000000000"
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: broker
      KAFKA_SECURITY_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-3:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 10@controller-0:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_METRIC_REPORTERS:
      KAFKA_OPTS: -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml -javaagent:/opt/jmx_prometheus/jolokia-jvm.jar=port=7072,host=*
      CONFLUENT_METRICS_ENABLE: "false"

  broker-4:
    image: confluentinc/cp-kafka:${VERSION}
    hostname: dk-broker-4
    container_name: dk-broker-4
    stop_grace_period: 60s
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      controller-0:
        condition: service_healthy
    ports:
      - "49092:49092"
      - "47071:7071"
    volumes:
      - bk4:/var/lib/kafka/data
      - ./jmx:/opt/jmx_prometheus
      - ./secrets:/etc/kafka/secrets
    environment:
      CLUSTER_ID: "0000000000000000000000"
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_SECURITY_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-4:9092,PLAINTEXT_HOST://localhost:49092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 10@controller-0:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_METRIC_REPORTERS:
      KAFKA_OPTS: -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml -javaagent:/opt/jmx_prometheus/jolokia-jvm.jar=port=7072,host=*
      CONFLUENT_METRICS_ENABLE: "false"

  schema-registry:
    image: confluentinc/cp-schema-registry:${VERSION}
    hostname: schema-registry
    container_name: dk-schema-registry
    stop_grace_period: 60s
    healthcheck:
      test: curl --fail http://localhost:8081/ || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      controller-0:
        condition: service_healthy
      broker-1:
        condition: service_healthy
      broker-2:
        condition: service_healthy
      broker-3:
        condition: service_healthy
    ports:
      - "8081:8081"
    volumes:
      - sr_secrets:/etc/schema-registry/secrets
      - ./jmx:/opt/jmx_prometheus
      - ./secrets:/etc/schema-registry/secrets
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker-1:9092,broker-2:9092,broker-3:9092
      KAFKA_METRIC_REPORTERS:
      CONFLUENT_METRICS_ENABLE: "false"
      EXTRA_OPTS: -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/sr-config.yml
      SCHEMA_REGISTRY_OPTS: -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/sr-config.yml

  connect-1:
    image: confluentinc/cp-kafka-connect:${VERSION}
    hostname: connect-1
    container_name: dk-connect-1
    ports:
      - "8083:8083"
    healthcheck:
      test: curl --fail http://localhost:8083/connector-plugins || exit 1
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 15s
    depends_on:
      broker-1:
        condition: service_healthy
    volumes:
      - c_kafka_data:/var/lib/kafka/data
      - c_kafka_secrets:/etc/kafka/secrets
      - ./connect/secrets:/etc/kafka-connect/secrets
      - ./connect/data:/data
      - ./connect/plugins:/etc/kafka-connect/jars
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "broker-1:9092"
      CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY: All
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "connect-cluster"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-cluster-config"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-cluster-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-cluster-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_CONFIG_PROVIDERS: file
      CONNECT_CONFIG_PROVIDERS_FILE_CLASS: "org.apache.kafka.common.config.provider.FileConfigProvider"
      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect-1"
      CONNECT_PLUGIN_PATH: /etc/kafka-connect/jars
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_OPTS:
